S -> SS | VARCNF1 | VARCNF2 | VARCNF3 | VARCNF4 | VARCNF5 | IFS | CNF6INBRACKET | WHILES | FORS | DEFCNF7 | CLASSS | CNF8CNF9 | CNF10VARVAL | CNF11CNF12 | TRIPLESINGLEQUOTEOPENCNF13 | TRIPLEDOUBLEQUOTEOPENCNF14 | CNF15STRING | VARINBRACKET | VARCNF16 | VARINBRACKET | VARCNF17 | VARCNF18 | variable ;
CNF1 -> CNF19VARVAL ;
CNF2 -> CNF20VARVAL ;
CNF3 -> CNF21VARVAL ;
CNF4 -> CNF22VARVAL ;
CNF5 -> CNF23VARVAL ;
CNF6 -> print ;
CNF7 -> SRETURN ;
CNF8 -> import ;
CNF9 -> VARVALCNF24 ;
CNF10 -> import ;
CNF11 -> from ;
CNF12 -> VARVALIMPORT ;
CNF13 -> STRINGTRIPLESINGLEQUOTECLOSE ;
CNF14 -> STRINGTRIPLEDOUBLEQUOTECLOSE ;
CNF15 -> # ;
CNF16 -> CNF25CNF26 ;
CNF17 -> INBRACKETCNF27 ;
CNF18 -> CNF28METHOD ;
CNF19 -> = ;
CNF20 -> += ;
CNF21 -> -= ;
CNF22 -> *= ;
CNF23 -> /= ;
CNF24 -> CNF29VARVAL ;
CNF25 -> = ;
CNF26 -> VARINBRACKET ;
CNF27 -> CNF30METHOD ;
CNF28 -> . ;
CNF29 -> as ;
CNF30 -> . ;
VARVAL -> variable | angka | VARVALCNF31 | VARVALCNF32 | VARVALCNF33 | CNF34CNF35 | True | False | BOOLEANCNF36 | BOOLEANCNF37 | CNF38BOOLEAN | VARVALCNF39 | VARVALCNF40 | CNF41CNF42 | CNF43CNF44 | CNF45CNF46 | CNF47CNF48 | CNF49CNF50 | CNF51CNF52 | VARVALCNF53 | CNF54INBRACKET | TYPECNF55 | VARVALCNF56 | VARINBRACKET | VARCNF57 | VARCNF58 | variable ;
CNF31 -> OPERATORVARVAL ;
CNF32 -> CNF59VARVAL ;
CNF33 -> CNF60VARVAL ;
CNF34 -> ( ;
CNF35 -> VARVALCNF61 ;
CNF36 -> CNF62BOOLEAN ;
CNF37 -> CNF63BOOLEAN ;
CNF38 -> not ;
CNF39 -> CNF64VARVAL ;
CNF40 -> EVALUATORVARVAL ;
CNF41 -> ' ;
CNF42 -> STRINGCNF65 ;
CNF43 -> " ;
CNF44 -> STRINGCNF66 ;
CNF45 -> [ ;
CNF46 -> VARVALCNF67 ;
CNF47 -> { ;
CNF48 -> VARVALCNF68 ;
CNF49 -> " ;
CNF50 -> " ;
CNF51 -> ' ;
CNF52 -> ' ;
CNF53 -> OPERATORVARVAL ;
CNF54 -> input ;
CNF55 -> CNF69CNF70 ;
CNF56 -> CNF71VARVAL ;
CNF57 -> INBRACKETCNF72 ;
CNF58 -> CNF73METHOD ;
CNF59 -> ** ;
CNF60 -> // ;
CNF61 -> ) ;
CNF62 -> and ;
CNF63 -> or ;
CNF64 -> is ;
CNF65 -> ' ;
CNF66 -> " ;
CNF67 -> ] ;
CNF68 -> } ;
CNF69 -> ( ;
CNF70 -> INPUTCNF74 ;
CNF71 -> , ;
CNF72 -> CNF75METHOD ;
CNF73 -> . ;
CNF74 -> ) ;
CNF75 -> . ;
OPERATOR -> + | - | * | / | % ;
VAR -> variable ;
VAL -> angka | VARVALCNF76 | VARVALCNF77 | VARVALCNF78 | CNF79CNF80 | True | False | BOOLEANCNF81 | BOOLEANCNF82 | CNF83BOOLEAN | VARVALCNF84 | VARVALCNF85 | CNF86CNF87 | CNF88CNF89 | CNF90CNF91 | CNF92CNF93 | CNF94CNF95 | CNF96CNF97 ;
CNF76 -> OPERATORVARVAL ;
CNF77 -> CNF98VARVAL ;
CNF78 -> CNF99VARVAL ;
CNF79 -> ( ;
CNF80 -> VARVALCNF100 ;
CNF81 -> CNF101BOOLEAN ;
CNF82 -> CNF102BOOLEAN ;
CNF83 -> not ;
CNF84 -> CNF103VARVAL ;
CNF85 -> EVALUATORVARVAL ;
CNF86 -> ' ;
CNF87 -> STRINGCNF104 ;
CNF88 -> " ;
CNF89 -> STRINGCNF105 ;
CNF90 -> [ ;
CNF91 -> VARVALCNF106 ;
CNF92 -> { ;
CNF93 -> VARVALCNF107 ;
CNF94 -> " ;
CNF95 -> " ;
CNF96 -> ' ;
CNF97 -> ' ;
CNF98 -> ** ;
CNF99 -> // ;
CNF100 -> ) ;
CNF101 -> and ;
CNF102 -> or ;
CNF103 -> is ;
CNF104 -> ' ;
CNF105 -> " ;
CNF106 -> ] ;
CNF107 -> } ;
EVALUATOR -> > | < | == | != | <= | >= ;
STRING -> string | STRINGSTRING ;
BOOLEAN -> True | False | BOOLEANCNF108 | BOOLEANCNF109 | CNF110BOOLEAN | VARVALCNF111 | VARVALCNF112 ;
CNF108 -> CNF113BOOLEAN ;
CNF109 -> CNF114BOOLEAN ;
CNF110 -> not ;
CNF111 -> CNF115VARVAL ;
CNF112 -> EVALUATORVARVAL ;
CNF113 -> and ;
CNF114 -> or ;
CNF115 -> is ;
COMMENT -> TRIPLESINGLEQUOTEOPENCNF116 | TRIPLEDOUBLEQUOTEOPENCNF117 | CNF118STRING ;
CNF116 -> STRINGTRIPLESINGLEQUOTECLOSE ;
CNF117 -> STRINGTRIPLEDOUBLEQUOTECLOSE ;
CNF118 -> # ;
TRIPLEDOUBLEQUOTEOPEN -> CNF119STRING | """ ;
CNF119 -> """ ;
TRIPLEDOUBLEQUOTECLOSE -> """ | STRINGCNF120 ;
CNF120 -> """ ;
TRIPLESINGLEQUOTEOPEN -> CNF121STRING | ''' ;
CNF121 -> ''' ;
TRIPLESINGLEQUOTECLOSE -> ''' | STRINGCNF122 ;
CNF122 -> ''' ;
INBRACKET -> CNF123CNF124 | CNF125CNF126 | CNF127CNF128 ;
CNF123 -> ( ;
CNF124 -> METHODCNF129 ;
CNF125 -> ( ;
CNF126 -> VARVALCNF130 ;
CNF127 -> ( ;
CNF128 -> ) ;
CNF129 -> ) ;
CNF130 -> ) ;
EXPRES -> CNF131CNF132 | True | False | BOOLEANCNF133 | BOOLEANCNF134 | CNF135BOOLEAN | VARVALCNF136 | VARVALCNF137 | CNF138CNF139 | CNF140CNF141 | CNF142CNF143 ;
CNF131 -> ( ;
CNF132 -> BOOLEANCNF144 ;
CNF133 -> CNF145BOOLEAN ;
CNF134 -> CNF146BOOLEAN ;
CNF135 -> not ;
CNF136 -> CNF147VARVAL ;
CNF137 -> EVALUATORVARVAL ;
CNF138 -> ( ;
CNF139 -> METHODCNF148 ;
CNF140 -> ( ;
CNF141 -> VARVALCNF149 ;
CNF142 -> ( ;
CNF143 -> ) ;
CNF144 -> ) ;
CNF145 -> and ;
CNF146 -> or ;
CNF147 -> is ;
CNF148 -> ) ;
CNF149 -> ) ;
RAISE -> CNF150INBRACKET ;
CNF150 -> raise ;
BREAK -> break ;
PASS -> pass ;
PRINT -> CNF151INBRACKET ;
CNF151 -> print ;
CONTINUE -> continue ;
ELSE -> CNF152CNF153 ;
CNF152 -> else ;
CNF153 -> : ;
IF -> CNF154CNF155 | IFCNF156 | IFCNF157 | IFCNF158 | IFCNF159 | IFCNF160 | IFCNF161 ;
CNF154 -> if ;
CNF155 -> EXPRESCNF162 ;
CNF156 -> SCNF163 ;
CNF157 -> SCNF164 ;
CNF158 -> SRAISE ;
CNF159 -> SBREAK ;
CNF160 -> SPASS ;
CNF161 -> SCONTINUE ;
CNF162 -> : ;
CNF163 -> ELIFS ;
CNF164 -> ELSES ;
ELIF -> CNF165CNF166 | ELIFCNF167 | ELIFCNF168 ;
CNF165 -> elif ;
CNF166 -> EXPRESCNF169 ;
CNF167 -> SCNF170 ;
CNF168 -> SCNF171 ;
CNF169 -> : ;
CNF170 -> ELIFS ;
CNF171 -> ELSES ;
TYPE -> str | float | int | double ;
INPUT -> CNF172INBRACKET | TYPECNF173 ;
CNF172 -> input ;
CNF173 -> CNF174CNF175 ;
CNF174 -> ( ;
CNF175 -> INPUTCNF176 ;
CNF176 -> ) ;
RANGE -> CNF177INBRACKET ;
CNF177 -> range ;
FROM -> CNF178CNF179 ;
CNF178 -> from ;
CNF179 -> VARVALIMPORT ;
WHILE -> CNF180CNF181 ;
CNF180 -> while ;
CNF181 -> EXPRESCNF182 ;
CNF182 -> : ;
FOR -> CNF183CNF184 | CNF185CNF186 ;
CNF183 -> for ;
CNF184 -> VARCNF187 ;
CNF185 -> for ;
CNF186 -> VARCNF188 ;
CNF187 -> CNF189CNF190 ;
CNF188 -> CNF191CNF192 ;
CNF189 -> in ;
CNF190 -> STRINGCNF193 ;
CNF191 -> in ;
CNF192 -> RANGECNF194 ;
CNF193 -> : ;
CNF194 -> : ;
RETURN -> CNF195BOOLEAN | CNF196VAL ;
CNF195 -> return ;
CNF196 -> return ;
CLASS -> CNF197CNF198 ;
CNF197 -> class ;
CNF198 -> VARCNF199 ;
CNF199 -> : ;
IMPORT -> CNF200CNF201 | CNF202VARVAL ;
CNF200 -> import ;
CNF201 -> VARVALCNF203 ;
CNF202 -> import ;
CNF203 -> CNF204VARVAL ;
CNF204 -> as ;
METHOD -> VARINBRACKET | VARCNF205 | VARCNF206 | variable ;
CNF205 -> INBRACKETCNF207 ;
CNF206 -> CNF208METHOD ;
CNF207 -> CNF209METHOD ;
CNF208 -> . ;
CNF209 -> . ;
DEF -> CNF210CNF211 ;
CNF210 -> def ;
CNF211 -> VARCNF212 ;
CNF212 -> INBRACKETCNF213 ;
CNF213 -> : ;