S -> SS | IFS | IFCNF1 | CNF2CNF3 | CNF4STRING | CNF5CNF6 | CNF7STRING ;
CNF1 -> SCNF8 ;
CNF2 -> variable ;
CNF3 -> CNF9VALUE ;
CNF4 -> # ;
CNF5 -> ''' ;
CNF6 -> STRINGCNF10 ;
CNF7 -> def ;
CNF8 -> ELSES ;
CNF9 -> = ;
CNF10 -> ''' ;
COMMENT -> CNF11STRING | CNF12CNF13 ;
CNF11 -> # ;
CNF12 -> ''' ;
CNF13 -> STRINGCNF14 ;
CNF14 -> ''' ;
FUNCTION -> CNF15STRING ;
CNF15 -> def ;
IF -> CNF16CNF17 ;
CNF16 -> if ;
CNF17 -> BOOLEANCNF18 ;
CNF18 -> : ;
ELIF -> CNF19CNF20 | ELIFELIF | e ;
CNF19 -> elif ;
CNF20 -> BOOLEANCNF21 ;
CNF21 -> CNF22S ;
CNF22 -> : ;
ELSE -> CNF23CNF24 | e ;
CNF23 -> else ;
CNF24 -> CNF25S ;
CNF25 -> : ;
VALUE -> CNF26CNF27 | angka | CNF28CNF29 | CNF30CNF31 | string | STRINGSTRING ;
CNF26 -> ( ;
CNF27 -> VALUECNF32 ;
CNF28 -> angka ;
CNF29 -> OPERATORCNF33 ;
CNF30 -> ( ;
CNF31 -> CNF34CNF35 ;
CNF32 -> ) ;
CNF33 -> angka ;
CNF34 -> angka ;
CNF35 -> ) ;
BOOLEAN -> True | False | VARVALCNF36 | CNF37CNF38 | BOOLEANCNF39 | BOOLEANCNF40 | CNF41BOOLEAN ;
CNF36 -> EVALUATORVARVAL ;
CNF37 -> ( ;
CNF38 -> BOOLEANCNF42 ;
CNF39 -> CNF43BOOLEAN ;
CNF40 -> CNF44BOOLEAN ;
CNF41 -> not ;
CNF42 -> ) ;
CNF43 -> or ;
CNF44 -> and ;
VARVAL -> variable | CNF45CNF46 | angka | CNF47CNF48 | CNF49CNF50 | string | STRINGSTRING ;
CNF45 -> ( ;
CNF46 -> VALUECNF51 ;
CNF47 -> angka ;
CNF48 -> OPERATORCNF52 ;
CNF49 -> ( ;
CNF50 -> CNF53CNF54 ;
CNF51 -> ) ;
CNF52 -> angka ;
CNF53 -> angka ;
CNF54 -> ) ;
EVALUATOR -> == | <= | < | > | >= | != ;
MATH -> angka | CNF55CNF56 | CNF57CNF58 ;
CNF55 -> angka ;
CNF56 -> OPERATORCNF59 ;
CNF57 -> ( ;
CNF58 -> CNF60CNF61 ;
CNF59 -> angka ;
CNF60 -> angka ;
CNF61 -> ) ;
OPERATOR -> + | - | * | / | mod ;
TRIPLEQUOTE -> ''' ;
STRING -> string | STRINGSTRING ;