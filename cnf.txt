S -> SS | VARCNF1 | VARCNF2 | VARCNF3 | VARCNF4 | VARCNF5 | IFS | CNF6INBRACKET | WHILES | FORS | DEFS | CLASSS | CNF7CNF8 | CNF9VAR | CNF10CNF11 | TRIPLESINGLEQUOTECNF12 | TRIPLEDOUBLEQUOTECNF13 | CNF14STRING ;
CNF1 -> CNF15VV ;
CNF2 -> CNF16VV ;
CNF3 -> CNF17VV ;
CNF4 -> CNF18VV ;
CNF5 -> CNF19VV ;
CNF6 -> print ;
CNF7 -> import ;
CNF8 -> VARCNF20 ;
CNF9 -> import ;
CNF10 -> from ;
CNF11 -> VARIMPORT ;
CNF12 -> STRINGTRIPLESINGLEQUOTE ;
CNF13 -> STRINGTRIPLEDOUBLEQUOTE ;
CNF14 -> # ;
CNF15 -> = ;
CNF16 -> += ;
CNF17 -> -= ;
CNF18 -> *= ;
CNF19 -> /= ;
CNF20 -> CNF21VAR ;
CNF21 -> as ;
VV -> variable | angka | VVCNF22 | VVCNF23 | VVCNF24 | CNF25CNF26 | true | false | BOOLCNF27 | BOOLCNF28 | CNF29BOOL | VVCNF30 | VVCNF31 | CNF32CNF33 | CNF34CNF35 | VVCNF36 | CNF37INBRACKET | TYPECNF38 | VVCNF39 | CNF40INBRACKET | CNF41CNF42 ;
CNF22 -> OPSVV ;
CNF23 -> CNF43VV ;
CNF24 -> CNF44VV ;
CNF25 -> ( ;
CNF26 -> VVCNF45 ;
CNF27 -> CNF46BOOL ;
CNF28 -> CNF47BOOL ;
CNF29 -> not ;
CNF30 -> CNF48VV ;
CNF31 -> RELATIONVV ;
CNF32 -> " ;
CNF33 -> STRINGCNF49 ;
CNF34 -> ' ;
CNF35 -> STRINGCNF50 ;
CNF36 -> OPSVV ;
CNF37 -> input ;
CNF38 -> CNF51CNF52 ;
CNF39 -> CNF53VV ;
CNF40 -> len ;
CNF41 -> with ;
CNF42 -> CNF54CNF55 ;
CNF43 -> ** ;
CNF44 -> // ;
CNF45 -> ) ;
CNF46 -> and ;
CNF47 -> or ;
CNF48 -> is ;
CNF49 -> " ;
CNF50 -> ' ;
CNF51 -> ( ;
CNF52 -> INPUTCNF56 ;
CNF53 -> , ;
CNF54 -> open ;
CNF55 -> INBRACKETCNF57 ;
CNF56 -> ) ;
CNF57 -> CNF58VAR ;
CNF58 -> as ;
VAR -> variable ;
VAL -> angka | VVCNF59 | VVCNF60 | VVCNF61 | CNF62CNF63 | true | false | BOOLCNF64 | BOOLCNF65 | CNF66BOOL | VVCNF67 | VVCNF68 | CNF69CNF70 | CNF71CNF72 ;
CNF59 -> OPSVV ;
CNF60 -> CNF73VV ;
CNF61 -> CNF74VV ;
CNF62 -> ( ;
CNF63 -> VVCNF75 ;
CNF64 -> CNF76BOOL ;
CNF65 -> CNF77BOOL ;
CNF66 -> not ;
CNF67 -> CNF78VV ;
CNF68 -> RELATIONVV ;
CNF69 -> " ;
CNF70 -> STRINGCNF79 ;
CNF71 -> ' ;
CNF72 -> STRINGCNF80 ;
CNF73 -> ** ;
CNF74 -> // ;
CNF75 -> ) ;
CNF76 -> and ;
CNF77 -> or ;
CNF78 -> is ;
CNF79 -> " ;
CNF80 -> ' ;
RELATION -> > | < | == | != | <= | >= ;
BOOL -> true | false | BOOLCNF81 | BOOLCNF82 | CNF83BOOL | VVCNF84 | VVCNF85 ;
CNF81 -> CNF86BOOL ;
CNF82 -> CNF87BOOL ;
CNF83 -> not ;
CNF84 -> CNF88VV ;
CNF85 -> RELATIONVV ;
CNF86 -> and ;
CNF87 -> or ;
CNF88 -> is ;
OPS -> + | - | * | / | % ;
STRING -> string | STRINGSTRING ;
COMMENT -> TRIPLESINGLEQUOTECNF89 | TRIPLEDOUBLEQUOTECNF90 | CNF91STRING ;
CNF89 -> STRINGTRIPLESINGLEQUOTE ;
CNF90 -> STRINGTRIPLEDOUBLEQUOTE ;
CNF91 -> # ;
TRIPLEDOUBLEQUOTE -> """ ;
TRIPLESINGLEQUOTE -> ''' ;
INBRACKET -> CNF92CNF93 | CNF94CNF95 ;
CNF92 -> ( ;
CNF93 -> VVCNF96 ;
CNF94 -> ( ;
CNF95 -> ) ;
CNF96 -> ) ;
PRINT -> CNF97INBRACKET ;
CNF97 -> print ;
EXPRES -> CNF98CNF99 | true | false | BOOLCNF100 | BOOLCNF101 | CNF102BOOL | VVCNF103 | VVCNF104 ;
CNF98 -> ( ;
CNF99 -> BOOLCNF105 ;
CNF100 -> CNF106BOOL ;
CNF101 -> CNF107BOOL ;
CNF102 -> not ;
CNF103 -> CNF108VV ;
CNF104 -> RELATIONVV ;
CNF105 -> ) ;
CNF106 -> and ;
CNF107 -> or ;
CNF108 -> is ;
RAISE -> CNF109INBRACKET ;
CNF109 -> raise ;
BREAK -> break ;
PASS -> pass ;
CONTINUE -> continue ;
IF -> CNF110CNF111 | IFCNF112 | IFCNF113 | IFCNF114 | IFCNF115 | IFCNF116 | IFCNF117 ;
CNF110 -> if ;
CNF111 -> EXPRESCNF118 ;
CNF112 -> SCNF119 ;
CNF113 -> SCNF120 ;
CNF114 -> SRAISE ;
CNF115 -> SBREAK ;
CNF116 -> SPASS ;
CNF117 -> SCONTINUE ;
CNF118 -> : ;
CNF119 -> ELIFS ;
CNF120 -> ELSES ;
ELIF -> CNF121CNF122 | ELIFCNF123 | ELIFCNF124 ;
CNF121 -> elif ;
CNF122 -> EXPRESCNF125 ;
CNF123 -> SCNF126 ;
CNF124 -> SCNF127 ;
CNF125 -> : ;
CNF126 -> ELIFS ;
CNF127 -> ELSES ;
ELSE -> CNF128CNF129 ;
CNF128 -> else ;
CNF129 -> : ;
TYPE -> str | float | int | double ;
INPUT -> CNF130INBRACKET | TYPECNF131 ;
CNF130 -> input ;
CNF131 -> CNF132CNF133 ;
CNF132 -> ( ;
CNF133 -> INPUTCNF134 ;
CNF134 -> ) ;
RANGE -> CNF135INBRACKET ;
CNF135 -> range ;
WHILE -> CNF136CNF137 ;
CNF136 -> while ;
CNF137 -> EXPRESCNF138 ;
CNF138 -> : ;
FOR -> CNF139CNF140 | CNF141CNF142 ;
CNF139 -> for ;
CNF140 -> VARCNF143 ;
CNF141 -> for ;
CNF142 -> VARCNF144 ;
CNF143 -> CNF145CNF146 ;
CNF144 -> CNF147CNF148 ;
CNF145 -> in ;
CNF146 -> STRINGCNF149 ;
CNF147 -> in ;
CNF148 -> RANGECNF150 ;
CNF149 -> : ;
CNF150 -> : ;
RETURN -> CNF151BOOL | CNF152VAL ;
CNF151 -> return ;
CNF152 -> return ;
DEF -> CNF153CNF154 | DEFCNF155 ;
CNF153 -> def ;
CNF154 -> VARCNF156 ;
CNF155 -> SRETURN ;
CNF156 -> INBRACKETCNF157 ;
CNF157 -> : ;
CLASS -> CNF158CNF159 ;
CNF158 -> class ;
CNF159 -> VARCNF160 ;
CNF160 -> : ;
IMPORT -> CNF161CNF162 | CNF163VAR ;
CNF161 -> import ;
CNF162 -> VARCNF164 ;
CNF163 -> import ;
CNF164 -> CNF165VAR ;
CNF165 -> as ;
FROM -> CNF166CNF167 ;
CNF166 -> from ;
CNF167 -> VARIMPORT ;
METHOD -> CNF168INBRACKET | CNF169CNF170 ;
CNF168 -> len ;
CNF169 -> with ;
CNF170 -> CNF171CNF172 ;
CNF171 -> open ;
CNF172 -> INBRACKETCNF173 ;
CNF173 -> CNF174VAR ;
CNF174 -> as ;